!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
$0	include/stackframe.h	/^	sw      $0, TF_REG0(sp)$/;"	v
$1	include/stackframe.h	/^	lw      $1, TF_REG1(sp)$/;"	v
$1	include/stackframe.h	/^	sw      $1, TF_REG1(sp)$/;"	v
$10	include/stackframe.h	/^	lw      $10, TF_REG10(sp)$/;"	v
$10	include/stackframe.h	/^	sw      $10, TF_REG10(sp)$/;"	v
$11	include/stackframe.h	/^	lw      $11, TF_REG11(sp)$/;"	v
$11	include/stackframe.h	/^	sw      $11, TF_REG11(sp)$/;"	v
$12	include/stackframe.h	/^	lw      $12, TF_REG12(sp)$/;"	v
$12	include/stackframe.h	/^	sw      $12, TF_REG12(sp)$/;"	v
$13	include/stackframe.h	/^	lw      $13, TF_REG13(sp)$/;"	v
$13	include/stackframe.h	/^	sw      $13, TF_REG13(sp)$/;"	v
$14	include/stackframe.h	/^	lw      $14, TF_REG14(sp)$/;"	v
$14	include/stackframe.h	/^	sw      $14, TF_REG14(sp)$/;"	v
$15	include/stackframe.h	/^	lw      $15, TF_REG15(sp)$/;"	v
$15	include/stackframe.h	/^	sw      $15, TF_REG15(sp)$/;"	v
$16	include/stackframe.h	/^	lw      $16, TF_REG16(sp)$/;"	v
$16	include/stackframe.h	/^	sw      $16, TF_REG16(sp)$/;"	v
$17	include/stackframe.h	/^	lw      $17, TF_REG17(sp)$/;"	v
$17	include/stackframe.h	/^	sw      $17, TF_REG17(sp)$/;"	v
$18	include/stackframe.h	/^	lw      $18, TF_REG18(sp)$/;"	v
$18	include/stackframe.h	/^	sw      $18, TF_REG18(sp)$/;"	v
$19	include/stackframe.h	/^	lw      $19, TF_REG19(sp)$/;"	v
$19	include/stackframe.h	/^	sw      $19, TF_REG19(sp)$/;"	v
$2	include/stackframe.h	/^	lw      $2, TF_REG2(sp)$/;"	v
$2	include/stackframe.h	/^	sw      $2, TF_REG2(sp)$/;"	v
$20	include/stackframe.h	/^	lw      $20, TF_REG20(sp)$/;"	v
$20	include/stackframe.h	/^	sw      $20, TF_REG20(sp)$/;"	v
$21	include/stackframe.h	/^	lw      $21, TF_REG21(sp)$/;"	v
$21	include/stackframe.h	/^	sw      $21, TF_REG21(sp)$/;"	v
$22	include/stackframe.h	/^	lw      $22, TF_REG22(sp)$/;"	v
$22	include/stackframe.h	/^	sw      $22, TF_REG22(sp)$/;"	v
$23	include/stackframe.h	/^	lw      $23, TF_REG23(sp)$/;"	v
$23	include/stackframe.h	/^	sw      $23, TF_REG23(sp)$/;"	v
$24	include/stackframe.h	/^	lw      $24, TF_REG24(sp)$/;"	v
$24	include/stackframe.h	/^	sw      $24, TF_REG24(sp)$/;"	v
$25	include/stackframe.h	/^	lw      $25, TF_REG25(sp)$/;"	v
$25	include/stackframe.h	/^	sw      $25, TF_REG25(sp)$/;"	v
$26	include/stackframe.h	/^	sw      $26, TF_REG26(sp)$/;"	v
$27	include/stackframe.h	/^	sw      $27, TF_REG27(sp)$/;"	v
$28	include/stackframe.h	/^	lw      $28, TF_REG28(sp)$/;"	v
$28	include/stackframe.h	/^	sw      $28, TF_REG28(sp)$/;"	v
$3	include/stackframe.h	/^	lw      $3, TF_REG3(sp)$/;"	v
$3	include/stackframe.h	/^	sw      $3, TF_REG3(sp)$/;"	v
$30	include/stackframe.h	/^	lw      $30, TF_REG30(sp)$/;"	v
$30	include/stackframe.h	/^	sw      $30, TF_REG30(sp)$/;"	v
$31	include/stackframe.h	/^	lw      $31, TF_REG31(sp)$/;"	v
$31	include/stackframe.h	/^	sw      $31, TF_REG31(sp)$/;"	v
$4	include/stackframe.h	/^	lw      $4, TF_REG4(sp)$/;"	v
$4	include/stackframe.h	/^	sw      $4, TF_REG4(sp)$/;"	v
$5	include/stackframe.h	/^	lw      $5, TF_REG5(sp)$/;"	v
$5	include/stackframe.h	/^	sw      $5, TF_REG5(sp)$/;"	v
$6	include/stackframe.h	/^	lw      $6, TF_REG6(sp)$/;"	v
$6	include/stackframe.h	/^	sw      $6, TF_REG6(sp)$/;"	v
$7	include/stackframe.h	/^	lw      $7, TF_REG7(sp)$/;"	v
$7	include/stackframe.h	/^	sw      $7, TF_REG7(sp)$/;"	v
$8	include/stackframe.h	/^	lw      $8, TF_REG8(sp)$/;"	v
$8	include/stackframe.h	/^	sw      $8, TF_REG8(sp)$/;"	v
$9	include/stackframe.h	/^	lw      $9, TF_REG9(sp)$/;"	v
$9	include/stackframe.h	/^	sw      $9, TF_REG9(sp)$/;"	v
AT	include/asm/regdef.h	8;"	d
BITS_PER_LONG	include/bitops.h	4;"	d
BITS_PER_LONG_LONG	include/bitops.h	5;"	d
CC	include.mk	/^CC             := $(CROSS_COMPILE)gcc$/;"	m
CFLAGS	mk/profiles.mk	/^	CFLAGS   := $(DEBUG_CFLAGS)$/;"	m
CFLAGS	mk/profiles.mk	/^	CFLAGS   := $(RELEASE_CFLAGS)$/;"	m
CFLAGS	mk/profiles.mk	/^debug: CFLAGS    := $(DEBUG_CFLAGS)$/;"	m
CFLAGS	mk/profiles.mk	/^release: CFLAGS  := $(RELEASE_CFLAGS)$/;"	m
CP0_BADVADDR	include/asm/cp0regdef.h	11;"	d
CP0_CACHEERR	include/asm/cp0regdef.h	29;"	d
CP0_CAUSE	include/asm/cp0regdef.h	16;"	d
CP0_COMPARE	include/asm/cp0regdef.h	14;"	d
CP0_CONFIG	include/asm/cp0regdef.h	20;"	d
CP0_CONTEXT	include/asm/cp0regdef.h	8;"	d
CP0_COUNT	include/asm/cp0regdef.h	12;"	d
CP0_DIAGNOSTIC	include/asm/cp0regdef.h	26;"	d
CP0_EBASE	include/asm/cp0regdef.h	19;"	d
CP0_ECC	include/asm/cp0regdef.h	28;"	d
CP0_ENTRYHI	include/asm/cp0regdef.h	13;"	d
CP0_ENTRYLO0	include/asm/cp0regdef.h	6;"	d
CP0_ENTRYLO1	include/asm/cp0regdef.h	7;"	d
CP0_EPC	include/asm/cp0regdef.h	17;"	d
CP0_ERROREPC	include/asm/cp0regdef.h	32;"	d
CP0_FRAMEMASK	include/asm/cp0regdef.h	25;"	d
CP0_INDEX	include/asm/cp0regdef.h	4;"	d
CP0_LLADDR	include/asm/cp0regdef.h	21;"	d
CP0_PAGEMASK	include/asm/cp0regdef.h	9;"	d
CP0_PERFORMANCE	include/asm/cp0regdef.h	27;"	d
CP0_PRID	include/asm/cp0regdef.h	18;"	d
CP0_RANDOM	include/asm/cp0regdef.h	5;"	d
CP0_STATUS	include/asm/cp0regdef.h	15;"	d
CP0_TAGHI	include/asm/cp0regdef.h	31;"	d
CP0_TAGLO	include/asm/cp0regdef.h	30;"	d
CP0_WATCHHI	include/asm/cp0regdef.h	23;"	d
CP0_WATCHLO	include/asm/cp0regdef.h	22;"	d
CP0_WIRED	include/asm/cp0regdef.h	10;"	d
CP0_XCONTEXT	include/asm/cp0regdef.h	24;"	d
CROSS_COMPILE	include.mk	/^CROSS_COMPILE  := mips-linux-gnu-$/;"	m
DEBUG_CFLAGS	mk/profiles.mk	/^DEBUG_CFLAGS     := $(CFLAGS) -O0 -g -ggdb -DMOS_DEBUG$/;"	m
DEBUG_LDFLAGS	mk/profiles.mk	/^DEBUG_LDFLAGS    := $(LDFLAGS)$/;"	m
EI_MAG0	include/elf.h	79;"	d
EI_MAG0	tools/readelf/elf.h	81;"	d
EI_MAG1	include/elf.h	82;"	d
EI_MAG1	tools/readelf/elf.h	84;"	d
EI_MAG2	include/elf.h	85;"	d
EI_MAG2	tools/readelf/elf.h	87;"	d
EI_MAG3	include/elf.h	88;"	d
EI_MAG3	tools/readelf/elf.h	90;"	d
EI_NIDENT	include/elf.h	56;"	d
EI_NIDENT	tools/readelf/elf.h	58;"	d
ELFMAG0	include/elf.h	80;"	d
ELFMAG0	tools/readelf/elf.h	82;"	d
ELFMAG1	include/elf.h	83;"	d
ELFMAG1	tools/readelf/elf.h	85;"	d
ELFMAG2	include/elf.h	86;"	d
ELFMAG2	tools/readelf/elf.h	88;"	d
ELFMAG3	include/elf.h	89;"	d
ELFMAG3	tools/readelf/elf.h	91;"	d
ELF_FOREACH_PHDR_OFF	include/elf.h	135;"	d
END	include/asm/asm.h	29;"	d
ENDIAN	include.mk	/^ENDIAN         := EL$/;"	m
ENVX	include/env.h	11;"	d
ENV_CREATE	include/env.h	68;"	d
ENV_CREATE_PRIORITY	include/env.h	61;"	d
ENV_FREE	include/env.h	14;"	d
ENV_NOT_RUNNABLE	include/env.h	16;"	d
ENV_RUNNABLE	include/env.h	15;"	d
EXPORT	include/asm/asm.h	33;"	d
E_BAD_ENV	include/error.h	10;"	d
E_BAD_PATH	include/error.h	39;"	d
E_FILE_EXISTS	include/error.h	42;"	d
E_INVAL	include/error.h	13;"	d
E_IPC_NOT_RECV	include/error.h	25;"	d
E_MAX_OPEN	include/error.h	33;"	d
E_NOT_EXEC	include/error.h	45;"	d
E_NOT_FOUND	include/error.h	36;"	d
E_NO_DISK	include/error.h	30;"	d
E_NO_FREE_ENV	include/error.h	22;"	d
E_NO_MEM	include/error.h	16;"	d
E_NO_SYS	include/error.h	19;"	d
E_UNSPECIFIED	include/error.h	7;"	d
Elf32_Addr	include/elf.h	/^typedef uint32_t Elf32_Addr;$/;"	t
Elf32_Addr	tools/readelf/elf.h	/^typedef uint32_t Elf32_Addr;$/;"	t
Elf32_Ehdr	include/elf.h	/^} Elf32_Ehdr;$/;"	t	typeref:struct:__anon4
Elf32_Ehdr	tools/readelf/elf.h	/^} Elf32_Ehdr;$/;"	t	typeref:struct:__anon1
Elf32_Half	include/elf.h	/^typedef uint16_t Elf32_Half;$/;"	t
Elf32_Half	tools/readelf/elf.h	/^typedef uint16_t Elf32_Half;$/;"	t
Elf32_Off	include/elf.h	/^typedef uint32_t Elf32_Off;$/;"	t
Elf32_Off	tools/readelf/elf.h	/^typedef uint32_t Elf32_Off;$/;"	t
Elf32_Phdr	include/elf.h	/^} Elf32_Phdr;$/;"	t	typeref:struct:__anon5
Elf32_Phdr	tools/readelf/elf.h	/^} Elf32_Phdr;$/;"	t	typeref:struct:__anon3
Elf32_Section	include/elf.h	/^typedef uint16_t Elf32_Section;$/;"	t
Elf32_Section	tools/readelf/elf.h	/^typedef uint16_t Elf32_Section;$/;"	t
Elf32_Shdr	tools/readelf/elf.h	/^} Elf32_Shdr;$/;"	t	typeref:struct:__anon2
Elf32_Sword	include/elf.h	/^typedef int32_t Elf32_Sword;$/;"	t
Elf32_Sword	tools/readelf/elf.h	/^typedef int32_t Elf32_Sword;$/;"	t
Elf32_Sxword	include/elf.h	/^typedef int64_t Elf32_Sxword;$/;"	t
Elf32_Sxword	tools/readelf/elf.h	/^typedef int64_t Elf32_Sxword;$/;"	t
Elf32_Symndx	include/elf.h	/^typedef uint32_t Elf32_Symndx;$/;"	t
Elf32_Symndx	tools/readelf/elf.h	/^typedef uint32_t Elf32_Symndx;$/;"	t
Elf32_Word	include/elf.h	/^typedef uint32_t Elf32_Word;$/;"	t
Elf32_Word	tools/readelf/elf.h	/^typedef uint32_t Elf32_Word;$/;"	t
Elf32_Xword	include/elf.h	/^typedef uint64_t Elf32_Xword;$/;"	t
Elf32_Xword	tools/readelf/elf.h	/^typedef uint64_t Elf32_Xword;$/;"	t
Env	include/env.h	/^struct Env {$/;"	s
FEXPORT	include/asm/asm.h	37;"	d
GENMASK	include/bitops.h	12;"	d
GENMASK_ULL	include/bitops.h	14;"	d
HOST_CC	include.mk	/^HOST_CC        := cc$/;"	m
HOST_ENDIAN	include.mk	/^HOST_ENDIAN    := $(shell lscpu | grep -iq 'little endian' && echo EL || echo EB)$/;"	m
INCLUDES	init/Makefile	/^INCLUDES    := -I..\/include\/$/;"	m
INCLUDES	kern/Makefile	/^INCLUDES    := -I..\/include\/$/;"	m
INCLUDES	lib/Makefile	/^INCLUDES    := -I..\/include\/$/;"	m
KADDR	include/mmu.h	163;"	d
KERNBASE	include/mmu.h	123;"	d
KSEG0	include/mmu.h	70;"	d
KSEG1	include/mmu.h	71;"	d
KSEG2	include/mmu.h	72;"	d
KSTACKTOP	include/mmu.h	125;"	d
KUSEG	include/mmu.h	69;"	d
LD	include.mk	/^LD             := $(CROSS_COMPILE)ld$/;"	m
LDFLAGS	mk/profiles.mk	/^	LDFLAGS  := $(RELEASE_LDFLAGS)$/;"	m
LDFLAGS	mk/profiles.mk	/^debug: LDFLAGS   := $(DEBUG_LDFLAGS)$/;"	m
LDFLAGS	mk/profiles.mk	/^release: LDFLAGS := $(RELEASE_LDFLAGS)$/;"	m
LEAF	include/asm/asm.h	7;"	d
LIST_EMPTY	include/queue.h	82;"	d
LIST_ENTRY	include/queue.h	69;"	d
LIST_FIRST	include/queue.h	87;"	d
LIST_FOREACH	include/queue.h	94;"	d
LIST_HEAD	include/queue.h	49;"	d
LIST_HEAD_INITIALIZER	include/queue.h	58;"	d
LIST_INIT	include/queue.h	100;"	d
LIST_INSERT_AFTER	include/queue.h	115;"	d
LIST_INSERT_BEFORE	include/queue.h	123;"	d
LIST_INSERT_HEAD	include/queue.h	135;"	d
LIST_NEXT	include/queue.h	143;"	d
LIST_REMOVE	include/queue.h	149;"	d
LOG2	include/bitops.h	20;"	d
LOG2NENV	include/env.h	9;"	d
LOG_1	include/bitops.h	16;"	d
LOG_2	include/bitops.h	17;"	d
LOG_4	include/bitops.h	18;"	d
LOG_8	include/bitops.h	19;"	d
MALTA_FPGA_BASE	include/malta.h	8;"	d
MALTA_FPGA_HALT	include/malta.h	41;"	d
MALTA_H	include/malta.h	2;"	d
MALTA_IDE_BASE	include/malta.h	24;"	d
MALTA_IDE_BUSY	include/malta.h	34;"	d
MALTA_IDE_CMD_PIO_READ	include/malta.h	35;"	d
MALTA_IDE_CMD_PIO_WRITE	include/malta.h	36;"	d
MALTA_IDE_DATA	include/malta.h	25;"	d
MALTA_IDE_DEVICE	include/malta.h	31;"	d
MALTA_IDE_ERR	include/malta.h	26;"	d
MALTA_IDE_LBA	include/malta.h	33;"	d
MALTA_IDE_LBAH	include/malta.h	30;"	d
MALTA_IDE_LBAL	include/malta.h	28;"	d
MALTA_IDE_LBAM	include/malta.h	29;"	d
MALTA_IDE_NSECT	include/malta.h	27;"	d
MALTA_IDE_STATUS	include/malta.h	32;"	d
MALTA_PCIIO_BASE	include/malta.h	7;"	d
MALTA_SERIAL_BASE	include/malta.h	13;"	d
MALTA_SERIAL_DATA	include/malta.h	14;"	d
MALTA_SERIAL_DATA_READY	include/malta.h	16;"	d
MALTA_SERIAL_LSR	include/malta.h	15;"	d
MALTA_SERIAL_THR_EMPTY	include/malta.h	17;"	d
MIN	include/types.h	12;"	d
NASID	include/mmu.h	8;"	d
NENV	include/env.h	10;"	d
NESTED	include/asm/asm.h	18;"	d
NO_SUCH_ENTRY	kern/tlb_asm.S	/^NO_SUCH_ENTRY:$/;"	l
PADDR	include/mmu.h	154;"	d
PAGE_SIZE	include/mmu.h	9;"	d
PDMAP	include/mmu.h	11;"	d
PDSHIFT	include/mmu.h	13;"	d
PDX	include/mmu.h	14;"	d
PF_MASKPROC	include/elf.h	124;"	d
PF_MASKPROC	tools/readelf/elf.h	141;"	d
PF_R	include/elf.h	123;"	d
PF_R	tools/readelf/elf.h	140;"	d
PF_W	include/elf.h	122;"	d
PF_W	tools/readelf/elf.h	139;"	d
PF_X	include/elf.h	121;"	d
PF_X	tools/readelf/elf.h	138;"	d
PGSHIFT	include/mmu.h	12;"	d
PPN	include/mmu.h	20;"	d
PTE_ADDR	include/mmu.h	16;"	d
PTE_COW	include/mmu.h	63;"	d
PTE_C_CACHEABLE	include/mmu.h	59;"	d
PTE_C_UNCACHEABLE	include/mmu.h	60;"	d
PTE_D	include/mmu.h	56;"	d
PTE_FLAGS	include/mmu.h	17;"	d
PTE_G	include/mmu.h	49;"	d
PTE_HARDFLAG_SHIFT	include/mmu.h	25;"	d
PTE_LIBRARY	include/mmu.h	66;"	d
PTE_V	include/mmu.h	52;"	d
PTMAP	include/mmu.h	10;"	d
PTX	include/mmu.h	15;"	d
PT_DYNAMIC	include/elf.h	108;"	d
PT_DYNAMIC	tools/readelf/elf.h	125;"	d
PT_HIOS	include/elf.h	115;"	d
PT_HIOS	tools/readelf/elf.h	132;"	d
PT_HIPROC	include/elf.h	117;"	d
PT_HIPROC	tools/readelf/elf.h	134;"	d
PT_INTERP	include/elf.h	109;"	d
PT_INTERP	tools/readelf/elf.h	126;"	d
PT_LOAD	include/elf.h	107;"	d
PT_LOAD	tools/readelf/elf.h	124;"	d
PT_LOOS	include/elf.h	114;"	d
PT_LOOS	tools/readelf/elf.h	131;"	d
PT_LOPROC	include/elf.h	116;"	d
PT_LOPROC	tools/readelf/elf.h	133;"	d
PT_NOTE	include/elf.h	110;"	d
PT_NOTE	tools/readelf/elf.h	127;"	d
PT_NULL	include/elf.h	106;"	d
PT_NULL	tools/readelf/elf.h	123;"	d
PT_NUM	include/elf.h	113;"	d
PT_NUM	tools/readelf/elf.h	130;"	d
PT_PHDR	include/elf.h	112;"	d
PT_PHDR	tools/readelf/elf.h	129;"	d
PT_SHLIB	include/elf.h	111;"	d
PT_SHLIB	tools/readelf/elf.h	128;"	d
Page	include/pmap.h	/^struct Page {$/;"	s
Page_LIST_entry_t	include/pmap.h	/^typedef LIST_ENTRY(Page) Page_LIST_entry_t;$/;"	t
Pde	include/mmu.h	/^typedef u_long Pde;$/;"	t
Pte	include/mmu.h	/^typedef u_long Pte;$/;"	t
QEMU	include.mk	/^QEMU           := qemu-system-mipsel$/;"	m
QEMU_FLAGS	Makefile	/^	export QEMU_FLAGS="$(QEMU_FLAGS)"$/;"	m
RELEASE_CFLAGS	mk/profiles.mk	/^RELEASE_CFLAGS   := $(CFLAGS) -O2$/;"	m
RELEASE_LDFLAGS	mk/profiles.mk	/^RELEASE_LDFLAGS  := $(LDFLAGS) -O --gc-sections$/;"	m
ROUND	include/types.h	20;"	d
ROUNDDOWN	include/types.h	21;"	d
STATUS_BEV	include/asm/cp0regdef.h	38;"	d
STATUS_CU0	include/asm/cp0regdef.h	37;"	d
STATUS_CU1	include/asm/cp0regdef.h	36;"	d
STATUS_CU2	include/asm/cp0regdef.h	35;"	d
STATUS_CU3	include/asm/cp0regdef.h	34;"	d
STATUS_ERL	include/asm/cp0regdef.h	49;"	d
STATUS_EXL	include/asm/cp0regdef.h	50;"	d
STATUS_IE	include/asm/cp0regdef.h	51;"	d
STATUS_IM0	include/asm/cp0regdef.h	39;"	d
STATUS_IM1	include/asm/cp0regdef.h	40;"	d
STATUS_IM2	include/asm/cp0regdef.h	41;"	d
STATUS_IM3	include/asm/cp0regdef.h	42;"	d
STATUS_IM4	include/asm/cp0regdef.h	43;"	d
STATUS_IM5	include/asm/cp0regdef.h	44;"	d
STATUS_IM6	include/asm/cp0regdef.h	45;"	d
STATUS_IM7	include/asm/cp0regdef.h	46;"	d
STATUS_R0	include/asm/cp0regdef.h	48;"	d
STATUS_UM	include/asm/cp0regdef.h	47;"	d
TAILQ_CONCAT	include/queue.h	237;"	d
TAILQ_EMPTY	include/queue.h	250;"	d
TAILQ_ENTRY	include/queue.h	174;"	d
TAILQ_FIRST	include/queue.h	251;"	d
TAILQ_FOREACH	include/queue.h	230;"	d
TAILQ_FOREACH_REVERSE	include/queue.h	233;"	d
TAILQ_HEAD	include/queue.h	164;"	d
TAILQ_HEAD_INITIALIZER	include/queue.h	166;"	d
TAILQ_INIT	include/queue.h	179;"	d
TAILQ_INSERT_AFTER	include/queue.h	203;"	d
TAILQ_INSERT_BEFORE	include/queue.h	213;"	d
TAILQ_INSERT_HEAD	include/queue.h	185;"	d
TAILQ_INSERT_TAIL	include/queue.h	195;"	d
TAILQ_LAST	include/queue.h	254;"	d
TAILQ_NEXT	include/queue.h	252;"	d
TAILQ_PREV	include/queue.h	255;"	d
TAILQ_REMOVE	include/queue.h	221;"	d
TF_BADVADDR	include/trap.h	70;"	d
TF_CAUSE	include/trap.h	71;"	d
TF_EPC	include/trap.h	72;"	d
TF_HI	include/trap.h	67;"	d
TF_LO	include/trap.h	68;"	d
TF_REG0	include/trap.h	29;"	d
TF_REG1	include/trap.h	30;"	d
TF_REG10	include/trap.h	39;"	d
TF_REG11	include/trap.h	40;"	d
TF_REG12	include/trap.h	41;"	d
TF_REG13	include/trap.h	42;"	d
TF_REG14	include/trap.h	43;"	d
TF_REG15	include/trap.h	44;"	d
TF_REG16	include/trap.h	45;"	d
TF_REG17	include/trap.h	46;"	d
TF_REG18	include/trap.h	47;"	d
TF_REG19	include/trap.h	48;"	d
TF_REG2	include/trap.h	31;"	d
TF_REG20	include/trap.h	49;"	d
TF_REG21	include/trap.h	50;"	d
TF_REG22	include/trap.h	51;"	d
TF_REG23	include/trap.h	52;"	d
TF_REG24	include/trap.h	53;"	d
TF_REG25	include/trap.h	54;"	d
TF_REG26	include/trap.h	58;"	d
TF_REG27	include/trap.h	59;"	d
TF_REG28	include/trap.h	60;"	d
TF_REG29	include/trap.h	61;"	d
TF_REG3	include/trap.h	32;"	d
TF_REG30	include/trap.h	62;"	d
TF_REG31	include/trap.h	63;"	d
TF_REG4	include/trap.h	33;"	d
TF_REG5	include/trap.h	34;"	d
TF_REG6	include/trap.h	35;"	d
TF_REG7	include/trap.h	36;"	d
TF_REG8	include/trap.h	37;"	d
TF_REG9	include/trap.h	38;"	d
TF_SIZE	include/trap.h	76;"	d
TF_STATUS	include/trap.h	65;"	d
TIMER_INTERVAL	include/kclock.h	6;"	d
TRUP	include/mmu.h	179;"	d
Trapframe	include/trap.h	/^struct Trapframe {$/;"	s
UCOW	include/mmu.h	137;"	d
UENVS	include/mmu.h	130;"	d
ULIM	include/mmu.h	126;"	d
UPAGES	include/mmu.h	129;"	d
USTACKTOP	include/mmu.h	135;"	d
UTEMP	include/mmu.h	138;"	d
UTEXT	include/mmu.h	136;"	d
UTOP	include/mmu.h	132;"	d
UVPT	include/mmu.h	128;"	d
UXSTACKTOP	include/mmu.h	133;"	d
VPN	include/mmu.h	21;"	d
_ELF_H	include/elf.h	22;"	d
_ELF_H	tools/readelf/elf.h	22;"	d
_ENV_H_	include/env.h	2;"	d
_ERROR_H_	include/error.h	2;"	d
_INC_TYPES_H_	include/types.h	2;"	d
_IO_H_	include/io.h	2;"	d
_KCLOCK_H_	include/kclock.h	2;"	d
_MACHINE_H_	include/machine.h	2;"	d
_MMU_H_	include/mmu.h	2;"	d
_PMAP_H_	include/pmap.h	2;"	d
_STRING_H_	include/string.h	2;"	d
_SYS_BITOPS_H_	include/bitops.h	2;"	d
_SYS_QUEUE_H_	include/queue.h	2;"	d
_TAILQ_ENTRY	include/queue.h	169;"	d
_TAILQ_HEAD	include/queue.h	159;"	d
_TRAP_H_	include/trap.h	2;"	d
__ASM_MIPS_REGDEF_H	include/asm/regdef.h	2;"	d
__SCHED_H__	include/sched.h	2;"	d
_cp0regdef_h_	include/asm/cp0regdef.h	2;"	d
_do_tlb_refill	kern/tlbex.c	/^void _do_tlb_refill(u_long *pentrylo, u_int va, u_int asid) {$/;"	f
_panic	kern/panic.c	/^void _panic(const char *file, int line, const char *func, const char *fmt, ...) {$/;"	f
_print_h_	include/print.h	2;"	d
_printk_h_	include/printk.h	2;"	d
a0	include/asm/regdef.h	11;"	d
a1	include/asm/regdef.h	12;"	d
a2	include/asm/regdef.h	13;"	d
a3	include/asm/regdef.h	14;"	d
alloc	kern/pmap.c	/^void *alloc(u_int n, u_int align, int clear) {$/;"	f
assert	include/mmu.h	172;"	d
clear_bss_done	init/start.S	/^clear_bss_done:$/;"	l
clear_bss_loop	init/start.S	/^clear_bss_loop:$/;"	l
cp0_badvaddr	include/trap.h	/^	unsigned long cp0_badvaddr;$/;"	m	struct:Trapframe
cp0_cause	include/trap.h	/^	unsigned long cp0_cause;$/;"	m	struct:Trapframe
cp0_epc	include/trap.h	/^	unsigned long cp0_epc;$/;"	m	struct:Trapframe
cp0_status	include/trap.h	/^	unsigned long cp0_status;$/;"	m	struct:Trapframe
cur_pgdir	kern/pmap.c	/^Pde *cur_pgdir;$/;"	v
do_tlb_mod	kern/tlbex.c	/^void do_tlb_mod(struct Trapframe *tf) {$/;"	f
do_tlb_refill_call	kern/tlb_asm.S	/^do_tlb_refill_call:$/;"	l
e_ehsize	include/elf.h	/^	Elf32_Half e_ehsize;		  \/* ELF header size in bytes *\/$/;"	m	struct:__anon4
e_ehsize	tools/readelf/elf.h	/^	Elf32_Half e_ehsize;		  \/* ELF header size in bytes *\/$/;"	m	struct:__anon1
e_entry	include/elf.h	/^	Elf32_Addr e_entry;		  \/* Entry point virtual address *\/$/;"	m	struct:__anon4
e_entry	tools/readelf/elf.h	/^	Elf32_Addr e_entry;		  \/* Entry point virtual address *\/$/;"	m	struct:__anon1
e_flags	include/elf.h	/^	Elf32_Word e_flags;		  \/* Processor-specific flags *\/$/;"	m	struct:__anon4
e_flags	tools/readelf/elf.h	/^	Elf32_Word e_flags;		  \/* Processor-specific flags *\/$/;"	m	struct:__anon1
e_ident	include/elf.h	/^	unsigned char e_ident[EI_NIDENT]; \/* Magic number and other info *\/$/;"	m	struct:__anon4
e_ident	tools/readelf/elf.h	/^	unsigned char e_ident[EI_NIDENT]; \/* Magic number and other info *\/$/;"	m	struct:__anon1
e_machine	include/elf.h	/^	Elf32_Half e_machine;		  \/* Architecture *\/$/;"	m	struct:__anon4
e_machine	tools/readelf/elf.h	/^	Elf32_Half e_machine;		  \/* Architecture *\/$/;"	m	struct:__anon1
e_phentsize	include/elf.h	/^	Elf32_Half e_phentsize;		  \/* Program header table entry size *\/$/;"	m	struct:__anon4
e_phentsize	tools/readelf/elf.h	/^	Elf32_Half e_phentsize;		  \/* Program header table entry size *\/$/;"	m	struct:__anon1
e_phnum	include/elf.h	/^	Elf32_Half e_phnum;		  \/* Program header table entry count *\/$/;"	m	struct:__anon4
e_phnum	tools/readelf/elf.h	/^	Elf32_Half e_phnum;		  \/* Program header table entry count *\/$/;"	m	struct:__anon1
e_phoff	include/elf.h	/^	Elf32_Off e_phoff;		  \/* Program header table file offset *\/$/;"	m	struct:__anon4
e_phoff	tools/readelf/elf.h	/^	Elf32_Off e_phoff;		  \/* Program header table file offset *\/$/;"	m	struct:__anon1
e_shentsize	include/elf.h	/^	Elf32_Half e_shentsize;		  \/* Section header table entry size *\/$/;"	m	struct:__anon4
e_shentsize	tools/readelf/elf.h	/^	Elf32_Half e_shentsize;		  \/* Section header table entry size *\/$/;"	m	struct:__anon1
e_shnum	include/elf.h	/^	Elf32_Half e_shnum;		  \/* Section header table entry count *\/$/;"	m	struct:__anon4
e_shnum	tools/readelf/elf.h	/^	Elf32_Half e_shnum;		  \/* Section header table entry count *\/$/;"	m	struct:__anon1
e_shoff	include/elf.h	/^	Elf32_Off e_shoff;		  \/* Section header table file offset *\/$/;"	m	struct:__anon4
e_shoff	tools/readelf/elf.h	/^	Elf32_Off e_shoff;		  \/* Section header table file offset *\/$/;"	m	struct:__anon1
e_shstrndx	include/elf.h	/^	Elf32_Half e_shstrndx;		  \/* Section header string table index *\/$/;"	m	struct:__anon4
e_shstrndx	tools/readelf/elf.h	/^	Elf32_Half e_shstrndx;		  \/* Section header string table index *\/$/;"	m	struct:__anon1
e_type	include/elf.h	/^	Elf32_Half e_type;		  \/* Object file type *\/$/;"	m	struct:__anon4
e_type	tools/readelf/elf.h	/^	Elf32_Half e_type;		  \/* Object file type *\/$/;"	m	struct:__anon1
e_version	include/elf.h	/^	Elf32_Word e_version;		  \/* Object file version *\/$/;"	m	struct:__anon4
e_version	tools/readelf/elf.h	/^	Elf32_Word e_version;		  \/* Object file version *\/$/;"	m	struct:__anon1
elf_from	lib/elfloader.c	/^const Elf32_Ehdr *elf_from(const void *binary, size_t size) {$/;"	f
elf_load_seg	lib/elfloader.c	/^int elf_load_seg(Elf32_Phdr *ph, const void *bin, elf_mapper_t map_page, void *data) {$/;"	f
elf_mapper_t	include/elf.h	/^typedef int (*elf_mapper_t)(void *data, u_long va, size_t offset, u_int perm, const void *src,$/;"	t
empty_disk	Makefile	/^empty_disk              := $(target_dir)\/empty.img$/;"	m
env_asid	include/env.h	/^	u_int env_asid;			 \/\/ ASID of this env$/;"	m	struct:Env
env_id	include/env.h	/^	u_int env_id;			 \/\/ unique environment identifier$/;"	m	struct:Env
env_ipc_dstva	include/env.h	/^	u_int env_ipc_dstva;   \/\/ va at which the received page should be mapped$/;"	m	struct:Env
env_ipc_from	include/env.h	/^	u_int env_ipc_from;    \/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	include/env.h	/^	u_int env_ipc_perm;    \/\/ perm in which the received page should be mapped$/;"	m	struct:Env
env_ipc_recving	include/env.h	/^	u_int env_ipc_recving; \/\/ whether this env is blocked receiving$/;"	m	struct:Env
env_ipc_value	include/env.h	/^	u_int env_ipc_value;   \/\/ the value sent to us$/;"	m	struct:Env
env_link	include/env.h	/^	LIST_ENTRY(Env) env_link;	 \/\/ intrusive entry in 'env_free_list'$/;"	m	struct:Env
env_parent_id	include/env.h	/^	u_int env_parent_id;		 \/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	include/env.h	/^	Pde *env_pgdir;			 \/\/ page directory$/;"	m	struct:Env
env_pri	include/env.h	/^	u_int env_pri;			 \/\/ schedule priority$/;"	m	struct:Env
env_runs	include/env.h	/^	u_int env_runs; \/\/ number of times we've been env_run'ed$/;"	m	struct:Env
env_sched_link	include/env.h	/^	TAILQ_ENTRY(Env) env_sched_link; \/\/ intrusive entry in 'env_sched_list'$/;"	m	struct:Env
env_status	include/env.h	/^	u_int env_status;		 \/\/ status of this env$/;"	m	struct:Env
env_tf	include/env.h	/^	struct Trapframe env_tf;	 \/\/ saved context (registers) before switching$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_user_tlb_mod_entry	include/env.h	/^	u_int env_user_tlb_mod_entry; \/\/ userspace TLB Mod handler$/;"	m	struct:Env
fmt_callback_t	include/print.h	/^typedef void (*fmt_callback_t)(void *data, const char *buf, size_t len);$/;"	t
fp	include/asm/regdef.h	38;"	d
freemem	kern/pmap.c	/^static u_long freemem;$/;"	v	file:
gp	include/asm/regdef.h	36;"	d
halt	kern/machine.c	/^void halt(void) {$/;"	f
hi	include/trap.h	/^	unsigned long hi;$/;"	m	struct:Trapframe
init-override	tests/lab1_2/kernel.mk	/^init-override := $(test_dir)\/init.c$/;"	m
init-override	tests/lab2_1/kernel.mk	/^init-override := $(test_dir)\/init.c$/;"	m
init-override	tests/lab2_2/kernel.mk	/^init-override := $(test_dir)\/init.c$/;"	m
init-override	tests/lab2_3/kernel.mk	/^init-override := $(test_dir)\/init.c$/;"	m
ioread16	include/io.h	/^static inline uint16_t ioread16(u_long paddr) {$/;"	f
ioread32	include/io.h	/^static inline uint32_t ioread32(u_long paddr) {$/;"	f
ioread8	include/io.h	/^static inline uint8_t ioread8(u_long paddr) {$/;"	f
iowrite16	include/io.h	/^static inline void iowrite16(uint16_t data, u_long paddr) {$/;"	f
iowrite32	include/io.h	/^static inline void iowrite32(uint32_t data, u_long paddr) {$/;"	f
iowrite8	include/io.h	/^static inline void iowrite8(uint8_t data, u_long paddr) {$/;"	f
is_elf_format	tools/readelf/readelf.c	/^int is_elf_format(const void *binary, size_t size) {$/;"	f
jp	include/asm/regdef.h	33;"	d
k0	include/asm/regdef.h	34;"	d
k0	include/stackframe.h	/^	andi    k0, STATUS_UM$/;"	v
k0	include/stackframe.h	/^	beqz    k0, 1f$/;"	v
k0	include/stackframe.h	/^	mfc0    k0, CP0_BADVADDR$/;"	v
k0	include/stackframe.h	/^	mfc0    k0, CP0_CAUSE$/;"	v
k0	include/stackframe.h	/^	mfc0    k0, CP0_EPC$/;"	v
k0	include/stackframe.h	/^	mfc0    k0, CP0_STATUS$/;"	v
k0	include/stackframe.h	/^	move    k0, sp$/;"	v
k0	include/stackframe.h	/^	sw      k0, TF_BADVADDR(sp)$/;"	v
k0	include/stackframe.h	/^	sw      k0, TF_CAUSE(sp)$/;"	v
k0	include/stackframe.h	/^	sw      k0, TF_EPC(sp)$/;"	v
k0	include/stackframe.h	/^	sw      k0, TF_HI(sp)$/;"	v
k0	include/stackframe.h	/^	sw      k0, TF_LO(sp)$/;"	v
k0	include/stackframe.h	/^	sw      k0, TF_REG29(sp)$/;"	v
k0	include/stackframe.h	/^	sw      k0, TF_STATUS(sp)$/;"	v
k1	include/asm/regdef.h	35;"	d
lab	Makefile	/^lab                     ?= $(shell cat .mos-this-lab 2>\/dev\/null || echo 6)$/;"	m
lab-ge	Makefile	/^lab-ge = $(shell [ "$$(echo $(lab)_ | cut -f1 -d_)" -ge $(1) ] && echo true)$/;"	m
lab-ge	kern/include.mk	/^lab-ge = $(shell [ "$$(echo $(lab)_ | cut -f1 -d_)" -ge $(1) ] && echo true)$/;"	m
lab-ge	tools/include.mk	/^lab-ge = $(shell [ "$$(echo $(lab)_ | cut -f1 -d_)" -ge $(1) ] && echo true)$/;"	m
link_script	Makefile	/^link_script             := kernel.lds$/;"	m
lo	include/trap.h	/^	unsigned long lo;$/;"	m	struct:Trapframe
main	tools/readelf/hello.c	/^int main() {$/;"	f
main	tools/readelf/main.c	/^int main(int argc, char *argv[]) {$/;"	f
memcpy	lib/string.c	/^void *memcpy(void *dst, const void *src, size_t n) {$/;"	f
memset	lib/string.c	/^void *memset(void *dst, int c, size_t n) {$/;"	f
memsize	kern/pmap.c	/^static u_long memsize; \/* Maximum physical address *\/$/;"	v	file:
mips_detect_memory	kern/pmap.c	/^void mips_detect_memory(u_int _memsize) {$/;"	f
mips_init	init/init.c	/^void mips_init(u_int argc, char **argv, char **penv, u_int ram_low_size) {$/;"	f
mips_init	tests/lab1_2/init.c	/^void mips_init(u_int argc, char **argv, char **penv, u_int ram_low_size) {$/;"	f
mips_init	tests/lab2_1/init.c	/^void mips_init(u_int argc, char **argv, char **penv, u_int ram_low_size) {$/;"	f
mips_init	tests/lab2_2/init.c	/^void mips_init(u_int argc, char **argv, char **penv, u_int ram_low_size) {$/;"	f
mips_init	tests/lab2_3/init.c	/^void mips_init(u_int argc, char **argv, char **penv, u_int ram_low_size) {$/;"	f
mips_vm_init	kern/pmap.c	/^void mips_vm_init() {$/;"	f
modules	Makefile	/^modules                 := lib init kern$/;"	m
mos_elf	Makefile	/^	export mos_elf="$(mos_elf)"$/;"	m
mos_elf	Makefile	/^mos_elf                 := $(target_dir)\/mos$/;"	m
npage	kern/pmap.c	/^u_long npage;	       \/* Amount of memory(in pages) *\/$/;"	v
objects	Makefile	/^objects                 := $(addsuffix \/*.o, $(modules)) $(addsuffix \/*.x, $(user_modules))$/;"	m
outputk	kern/printk.c	/^void outputk(void *data, const char *buf, size_t len) {$/;"	f
p_align	include/elf.h	/^	Elf32_Word p_align;  \/* Segment alignment *\/$/;"	m	struct:__anon5
p_align	tools/readelf/elf.h	/^	Elf32_Word p_align;  \/* Segment alignment *\/$/;"	m	struct:__anon3
p_filesz	include/elf.h	/^	Elf32_Word p_filesz; \/* Segment size in file *\/$/;"	m	struct:__anon5
p_filesz	tools/readelf/elf.h	/^	Elf32_Word p_filesz; \/* Segment size in file *\/$/;"	m	struct:__anon3
p_flags	include/elf.h	/^	Elf32_Word p_flags;  \/* Segment flags *\/$/;"	m	struct:__anon5
p_flags	tools/readelf/elf.h	/^	Elf32_Word p_flags;  \/* Segment flags *\/$/;"	m	struct:__anon3
p_memsz	include/elf.h	/^	Elf32_Word p_memsz;  \/* Segment size in memory *\/$/;"	m	struct:__anon5
p_memsz	tools/readelf/elf.h	/^	Elf32_Word p_memsz;  \/* Segment size in memory *\/$/;"	m	struct:__anon3
p_offset	include/elf.h	/^	Elf32_Off p_offset;  \/* Segment file offset *\/$/;"	m	struct:__anon5
p_offset	tools/readelf/elf.h	/^	Elf32_Off p_offset;  \/* Segment file offset *\/$/;"	m	struct:__anon3
p_paddr	include/elf.h	/^	Elf32_Addr p_paddr;  \/* Segment physical address *\/$/;"	m	struct:__anon5
p_paddr	tools/readelf/elf.h	/^	Elf32_Addr p_paddr;  \/* Segment physical address *\/$/;"	m	struct:__anon3
p_type	include/elf.h	/^	Elf32_Word p_type;   \/* Segment type *\/$/;"	m	struct:__anon5
p_type	tools/readelf/elf.h	/^	Elf32_Word p_type;   \/* Segment type *\/$/;"	m	struct:__anon3
p_vaddr	include/elf.h	/^	Elf32_Addr p_vaddr;  \/* Segment virtual address *\/$/;"	m	struct:__anon5
p_vaddr	tools/readelf/elf.h	/^	Elf32_Addr p_vaddr;  \/* Segment virtual address *\/$/;"	m	struct:__anon3
pa2page	include/pmap.h	/^static inline struct Page *pa2page(u_long pa) {$/;"	f
page2kva	include/pmap.h	/^static inline u_long page2kva(struct Page *pp) {$/;"	f
page2pa	include/pmap.h	/^static inline u_long page2pa(struct Page *pp) {$/;"	f
page2ppn	include/pmap.h	/^static inline u_long page2ppn(struct Page *pp) {$/;"	f
page_alloc	kern/pmap.c	/^int page_alloc(struct Page **new) {$/;"	f
page_check	kern/pmap.c	/^void page_check(void) {$/;"	f
page_decref	kern/pmap.c	/^void page_decref(struct Page *pp) {$/;"	f
page_free	kern/pmap.c	/^void page_free(struct Page *pp) {$/;"	f
page_free_list	kern/pmap.c	/^struct Page_list page_free_list; \/* Free list of physical pages *\/$/;"	v	typeref:struct:Page_list
page_init	kern/pmap.c	/^void page_init(void) {$/;"	f
page_insert	kern/pmap.c	/^int page_insert(Pde *pgdir, u_int asid, struct Page *pp, u_long va, u_int perm) {$/;"	f
page_lookup	kern/pmap.c	/^struct Page *page_lookup(Pde *pgdir, u_long va, Pte **ppte) {$/;"	f
page_remove	kern/pmap.c	/^void page_remove(Pde *pgdir, u_int asid, u_long va) {$/;"	f
page_strong_check	tests/lab2_2/init.c	/^void page_strong_check(void) {$/;"	f
pages	kern/pmap.c	/^struct Page *pages;$/;"	v	typeref:struct:Page
panic	include/printk.h	15;"	d
panic_on	include/printk.h	17;"	d
passive_alloc	kern/tlbex.c	/^static void passive_alloc(u_int va, Pde *pgdir, u_int asid) {$/;"	f	file:
pgdir_walk	kern/pmap.c	/^static int pgdir_walk(Pde *pgdir, u_long va, int create, Pte **ppte) {$/;"	f	file:
physical_memory_manage_check	kern/pmap.c	/^void physical_memory_manage_check(void) {$/;"	f
physical_memory_manage_strong_check	tests/lab2_1/init.c	/^void physical_memory_manage_strong_check(void) {$/;"	f
pp_link	include/pmap.h	/^	Page_LIST_entry_t pp_link; \/* free list link *\/$/;"	m	struct:Page
pp_ref	include/pmap.h	/^	u_short pp_ref;$/;"	m	struct:Page
print_char	lib/print.c	/^void print_char(fmt_callback_t out, void *data, char c, int length, int ladjust) {$/;"	f
print_num	lib/print.c	/^void print_num(fmt_callback_t out, void *data, unsigned long u, int base, int neg_flag, int length,$/;"	f
print_str	lib/print.c	/^void print_str(fmt_callback_t out, void *data, const char *s, int length, int ladjust) {$/;"	f
print_tf	kern/printk.c	/^void print_tf(struct Trapframe *tf) {$/;"	f
printcharc	kern/machine.c	/^void printcharc(char ch) {$/;"	f
printk	kern/printk.c	/^void printk(const char *fmt, ...) {$/;"	f
printk_1_check	tests/lab1_2/init.c	/^static void printk_1_check(void) {$/;"	f	file:
printk_2_check	tests/lab1_2/init.c	/^static void printk_2_check(void) {$/;"	f	file:
printk_3_check	tests/lab1_2/init.c	/^static void printk_3_check(void) {$/;"	f	file:
qemu_pts	Makefile	/^qemu_pts                := $(shell [ -f .qemu_log ] && grep -Eo '\/dev\/pts\/[0-9]+' .qemu_log)$/;"	m
ra	include/asm/regdef.h	40;"	d
readelf	tools/readelf/readelf.c	/^int readelf(const void *binary, size_t size) {$/;"	f
regs	include/trap.h	/^	unsigned long regs[32];$/;"	m	struct:Trapframe
s0	include/asm/regdef.h	23;"	d
s1	include/asm/regdef.h	24;"	d
s2	include/asm/regdef.h	25;"	d
s3	include/asm/regdef.h	26;"	d
s4	include/asm/regdef.h	27;"	d
s5	include/asm/regdef.h	28;"	d
s6	include/asm/regdef.h	29;"	d
s7	include/asm/regdef.h	30;"	d
s8	include/asm/regdef.h	39;"	d
scancharc	kern/machine.c	/^int scancharc(void) {$/;"	f
sh_addr	tools/readelf/elf.h	/^	Elf32_Addr sh_addr;	 \/* Section addr *\/$/;"	m	struct:__anon2
sh_addralign	tools/readelf/elf.h	/^	Elf32_Word sh_addralign; \/* Section alignment *\/$/;"	m	struct:__anon2
sh_entsize	tools/readelf/elf.h	/^	Elf32_Word sh_entsize;	 \/* Section entry size *\/$/;"	m	struct:__anon2
sh_flags	tools/readelf/elf.h	/^	Elf32_Word sh_flags;	 \/* Section flags *\/$/;"	m	struct:__anon2
sh_info	tools/readelf/elf.h	/^	Elf32_Word sh_info;	 \/* Section extra info *\/$/;"	m	struct:__anon2
sh_link	tools/readelf/elf.h	/^	Elf32_Word sh_link;	 \/* Section link *\/$/;"	m	struct:__anon2
sh_name	tools/readelf/elf.h	/^	Elf32_Word sh_name;	 \/* Section name *\/$/;"	m	struct:__anon2
sh_offset	tools/readelf/elf.h	/^	Elf32_Off sh_offset;	 \/* Section offset *\/$/;"	m	struct:__anon2
sh_size	tools/readelf/elf.h	/^	Elf32_Word sh_size;	 \/* Section size *\/$/;"	m	struct:__anon2
sh_type	tools/readelf/elf.h	/^	Elf32_Word sh_type;	 \/* Section type *\/$/;"	m	struct:__anon2
sp	include/asm/regdef.h	37;"	d
sp	include/stackframe.h	/^	li      sp, KSTACKTOP$/;"	v
sp	include/stackframe.h	/^	lw      sp, TF_REG29(sp) \/* Deallocate stack *\/$/;"	v
sp	include/stackframe.h	/^	subu    sp, sp, TF_SIZE$/;"	v
strchr	lib/string.c	/^const char *strchr(const char *s, int c) {$/;"	f
strcmp	lib/string.c	/^int strcmp(const char *p, const char *q) {$/;"	f
strcpy	lib/string.c	/^char *strcpy(char *dst, const char *src) {$/;"	f
strlen	lib/string.c	/^size_t strlen(const char *s) {$/;"	f
t0	include/asm/regdef.h	15;"	d
t1	include/asm/regdef.h	16;"	d
t2	include/asm/regdef.h	17;"	d
t3	include/asm/regdef.h	18;"	d
t4	include/asm/regdef.h	19;"	d
t5	include/asm/regdef.h	20;"	d
t6	include/asm/regdef.h	21;"	d
t7	include/asm/regdef.h	22;"	d
t8	include/asm/regdef.h	31;"	d
t9	include/asm/regdef.h	32;"	d
target_dir	Makefile	/^target_dir              := target$/;"	m
targets	Makefile	/^targets                 := $(mos_elf)$/;"	m
targets	kern/include.mk	/^targets             := machine.o printk.o panic.o$/;"	m
targets	lib/Makefile	/^targets     := elfloader.o print.o string.o$/;"	m
test_dir	Makefile	/^test: export test_dir = tests\/lab$(lab)$/;"	m
tlb_invalidate	kern/tlbex.c	/^void tlb_invalidate(u_int asid, u_long va) {$/;"	f
tlb_refill_check	tests/lab2_3/init.c	/^void tlb_refill_check(void) {$/;"	f
try	include/error.h	51;"	d
u_char	include/types.h	/^typedef unsigned char u_char;$/;"	t
u_int	include/types.h	/^typedef unsigned int u_int;$/;"	t
u_long	include/types.h	/^typedef unsigned long u_long;$/;"	t
u_short	include/types.h	/^typedef unsigned short u_short;$/;"	t
user_disk	Makefile	/^user_disk               := $(target_dir)\/fs.img$/;"	m
v0	include/asm/regdef.h	9;"	d
v0	include/stackframe.h	/^	lw      v0, TF_HI(sp)$/;"	v
v0	include/stackframe.h	/^	mtc0    v0, CP0_STATUS$/;"	v
v1	include/asm/regdef.h	10;"	d
v1	include/stackframe.h	/^	lw      v1, TF_EPC(sp)$/;"	v
v1	include/stackframe.h	/^	lw      v1, TF_LO(sp)$/;"	v
v1	include/stackframe.h	/^	mtc0    v1, CP0_EPC$/;"	v
va2pa	include/pmap.h	/^static inline u_long va2pa(Pde *pgdir, u_long va) {$/;"	f
vprintfmt	lib/print.c	/^void vprintfmt(fmt_callback_t out, void *data, const char *fmt, va_list ap) {$/;"	f
zero	include/asm/regdef.h	7;"	d
